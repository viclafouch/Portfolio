@mixin truncate($truncation-boundary) {
  max-width: $truncation-boundary;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

%outlined-active {
  outline-color: $salmon;
  outline-offset: 0;
}

@mixin outlined($transitions-property...) {
  $selector: outline-color, outline-offset;

  @each $item in $transitions-property {
    $selector: append($selector, $item, 'comma');
  }

  outline-color: transparent;
  outline-style: dotted;
  outline-width: thin;
  outline-offset: 1em;
  transition-property: $selector;
  transition-duration: 0.2s;
}

@mixin hardware($backface: true, $perspective: 1000) {
  @if $backface {
    backface-visibility: hidden;
  }
  perspective: $perspective;
}

@mixin push--auto {
  margin: {
    left: auto;
    right: auto;
  }
}

@mixin pseudo($display: block, $pos: absolute, $content: '') {
  content: $content;
  display: $display;
  position: $pos;
}

@mixin input-placeholder {
  &.placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
  &::-webkit-input-placeholder {
    @content;
  }
}

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin screen($size) {
  @if $size == 'nosmall' {
    @media only screen and (min-width: 480px) {
      @content;
    }
  } @else {
    @content;
  }
}
